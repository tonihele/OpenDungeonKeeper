plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id 'maven-publish'
    id 'idea'
}

ext {
    jmonkeyengine_version = '3.6.1-stable'
    license = file("$rootDir/license.txt")
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

application {
    applicationName = 'OpenKeeper'
    mainClass = 'toniarts.openkeeper.Main'
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        applicationDefaultJvmArgs = ["-Dvisualvm.display.name=OpenKeeper", "-XstartOnFirstThread"]
    }
    else {
        applicationDefaultJvmArgs = ["-Dvisualvm.display.name=OpenKeeper"]
    }    
}

task sourcesJar(type: Jar, dependsOn: [classes, startScripts, distZip, distTar]) {
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    //	archives javadocJar
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('com.github.nifty-gui:nifty') using module('com.github.tonihele.nifty-gui:nifty:1.4-SNAPSHOT')
        substitute module('com.github.nifty-gui:nifty-default-controls') using module('com.github.tonihele.nifty-gui:nifty-default-controls:1.4-SNAPSHOT')
        substitute module('com.github.nifty-gui:nifty-style-black') using module('com.github.tonihele.nifty-gui:nifty-style-black:1.4-SNAPSHOT')
    }
}

dependencies {
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation "org.jmonkeyengine:jme3-core:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-desktop:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-plugins:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-effects:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-networking:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-lwjgl3:$jmonkeyengine_version"
    implementation "org.jmonkeyengine:jme3-niftygui:$jmonkeyengine_version"
    implementation "com.badlogicgames.gdx:gdx-ai:1.8.2"
    implementation "javax.vecmath:vecmath:1.5.2"
    implementation "com.simsilica:zay-es:1.5.0"
    implementation "com.simsilica:zay-es-net:1.5.2"
    implementation "com.simsilica:sio2:1.8.0"
    implementation "com.simsilica:sim-ethereal:1.8.0"
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDirs 'assets'
            exclude 'Converted/**'
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
            'Main-Class': application.mainClass,
            'Built-By': System.properties['user.name'],
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Created-By': "Gradle ${gradle.gradleVersion}",
            'Build-JDK': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

eclipse {
    classpath {
        downloadSources=true
    }
    project {
        natures 'org.springsource.ide.eclipse.gradle.core.nature'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

compileJava {
    // We have annotation processors in log4j, only needed for writing plugins, disable the warnings
    options.compilerArgs += ["-proc:none"]
    options.compilerArgs += ["-Xlint:deprecation"]
    //options.compilerArgs += ["-Xlint:unchecked"]
}

wrapper {
    gradleVersion = '8.9'
}
